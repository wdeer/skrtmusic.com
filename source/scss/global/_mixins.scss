/* ==========================================================================
   Mixins
   ========================================================================== */


   @mixin aspect-ratio($arglist... /*$width/$ratio, $height*/){
       $map : keywords($arglist);
       $height: map-get($map, height) or nth-or-null($arglist, 2);
       $width:  map-get($map, width)  or nth-or-null($arglist, 1);
       $ratio:  map-get($map, ratio)  or if($width and $height, $width/$height, nth-or-null($arglist, 1)) or 1;
       $padding: 1/$ratio * 100%;
       &::before, &::after {
          content: '';
          display: table;
          clear: both;
          width:1px;
          margin-left:-1px;
       }
       &::before {
          float: left;
          padding-bottom: $padding;
       }
   }

   // Helper function
   // Return null rather than throwing an error if index is outside list range.
   @function nth-or-null($list, $index) {
     @return if(length($list) >= $index, nth($list, $index), null);
   }


   @mixin alpha-color($color, $background) {
     $percent: alpha($color) * 100%;
     $opaque: opacify($color, 1);
     $solid-color: mix($opaque, $background, $percent);
     background-color: $solid-color;
     background-color: $color;
   }
